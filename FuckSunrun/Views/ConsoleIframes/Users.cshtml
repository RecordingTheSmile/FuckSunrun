@inject IAntiforgery _antiforgery

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>用户管理</title>
    <link rel="stylesheet" href="~/component/pear/css/pear.css"/>
    <script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery/3.6.0/jquery.min.js" type="application/javascript"></script>
</head>
<body class="pear-container">
<div class="layui-card">
    <div class="layui-card-body">
        <table id="user-table" lay-filter="user-table"></table>
    </div>
</div>

<script type="text/html" id="user-toolbar">
    @* <button class="pear-btn pear-btn-danger pear-btn-md" lay-event="remove"> *@
    @*             <i class="layui-icon layui-icon-delete"></i> *@
    @*             删除 *@
    @*         </button> *@
    @*<button class="pear-btn pear-btn-danger pear-btn-md" lay-event="batchRemove">
            <i class="layui-icon layui-icon-delete"></i>
            删除
        </button>*@
</script>

<script type="text/html" id="user-canLogin">
	<input type="checkbox" name="canLogin" value="{{d.id}}" lay-skin="switch" lay-text="可以|禁止" lay-filter="user-canLogin" {{ d.canLogin === true ? 'checked' : '' }}/>
</script>
<script type="text/html" id="user-isEmailVerified">
    <input type="checkbox" name="isEmailVerified" value="{{d.id}}" lay-skin="switch" lay-text="已验证|未验证" lay-filter="user-isEmailVerified" {{ d.isEmailVerified === true ? 'checked' : '' }}/>
</script>

<script type="text/html" id="run-time">
    {{# var date=new Date(parseInt(d.createAt+"000"))}}
        {{date.getFullYear()}}年{{date.getMonth()+1}}月{{date.getDate()}}日{{date.getHours()}}:{{date.getMinutes().toString().length==1?"0"+date.getMinutes():date.getMinutes()}}
</script>

<script src="~/component/layui/layui.js"></script>
<script src="~/component/pear/pear.js"></script>
<script>

		function formatTime(t) {
			let time = t + ''
			return t.length === 1?'0'+time : time
        }
	
		layui.use(['table', 'form', 'jquery', 'common'], function () {
				let table = layui.table;
				let form = layui.form;
				let common = layui.common;

				
				
				@*
                										x.Id,
                                                        x.Username,
                                                        x.IsEmailVerified,
                                                        x.Email,
                                                        x.Permission,
                                                        x.CanLogin,
                *@
				
				let cols = [
					[{
							type: 'checkbox'
						},
						{
							title: '用户ID',
							field: 'id',
							align: 'center'
						},
						{
							title: '用户名',
							field: 'username',
							align: 'center'
						},
{						
							title: '邮箱是否验证',
							field: 'isSuccess',
							align: 'center',
							templet: '#user-isEmailVerified'
						},
						{
							title: '邮箱',
							field: 'email',
							align: 'center',
						},
						{
                        	title: '权限',
                        	field: 'permission',
                        	align: 'center',
                        },
						{
							title: '是否可登录',
							toolbar: '#user-canLogin',
							align: 'center',
						}
					]
				]

				table.render({
					elem: '#user-table',
					url: '/console/api/users',
					page: true,
					cols: cols,
					skin: 'line',
					headers: {
						'X-CSRF-TOKEN':'@_antiforgery.GetAndStoreTokens(Context).RequestToken'
					},
					request: {
						pageName: 'page',
						limitName:'limit'
					},
					parseData: (res) => {
						return {
							'code': res.status === 200 ? 0 : res.status,
							'msg': res.message,
							'count': res.data.total,
							'data':res.data.rows
                        }
                    },
					toolbar: '#user-toolbar',
					defaultToolbar: [{
						title: '刷新',
						layEvent: 'refresh',
						icon: 'layui-icon-refresh',
					}, 'filter', 'print', 'exports']
				});

				table.on('toolbar(user-table)', function(obj) {
					if (obj.event === 'refresh') {
						window.refresh();
					}
				});

				form.on('switch(user-canLogin)', function(obj) {
                                					window.changeLoginStatus(this.value,obj.elem.checked)
                });
				
				form.on('switch(user-isEmailVerified)', function(obj) {
                                					window.changeEmailStatus(this.value,obj.elem.checked)
                                });

				window.changeEmailStatus = function(id,isEmailVerified) {
					layer.confirm(`确定要${isEmailVerified?'验证':'取消验证'}邮箱`, {
						icon: 3,
						title: '提示'
					}, function(index) {
						layer.close(index);
						let loading = layer.load();
						$.ajax({
							url: `/console/api/user/${id}/emailStatus`,
							dataType: 'json',
							type: 'put',
							headers:{
								'X-CSRF-TOKEN':'@_antiforgery.GetAndStoreTokens(Context).RequestToken'
							},
							contentType:'application/json',
							data:JSON.stringify({
							isEmailVerified:isEmailVerified
							})
						}).done(result=>{
							layer.close(loading);

                            									layer.msg('修改成功', {
                            										icon: 1,
                            										time: 1500
                            									}, function() {
                            										table.reload('user-table')
                            									});

                            									

						}).fail(e=>{
							console.error(e)
							
							let errorMessage = '请求时发生错误'
							
							try{
								let json=JSON.parse(e.responseText)
								
								errorMessage = json.message || errorMessage	
							}catch(e){}
							
							layer.msg(errorMessage, {
                                                        										icon: 2,
                                                        										time: 2000
                                                        									});
						}).always(()=>layer.close(loading))
					});
				}
				
				window.changeLoginStatus = function(id,canLogin) {
                					layer.confirm(`确定要${canLogin?'允许':'禁止'}登录`, {
                						icon: 3,
                						title: '提示'
                					}, function(index) {
                						layer.close(index);
                						let loading = layer.load();
                						$.ajax({
                							url: `/console/api/user/${id}/loginStatus`,
                							dataType: 'json',
                							type: 'put',
                							headers:{
                								'X-CSRF-TOKEN':'@_antiforgery.GetAndStoreTokens(Context).RequestToken'
                							},
                							contentType:'application/json',
                							data:JSON.stringify({
                							canLogin:canLogin
                							})
                						}).done(result=>{
                							layer.close(loading);
                
                                            									layer.msg('修改成功', {
                                            										icon: 1,
                                            										time: 1500
                                            									}, function() {
                                            										table.reload('user-table')
                                            									});
                
                                            									
                
                						}).fail(e=>{
                							console.error(e)
                							
                							let errorMessage = '请求时发生错误'
                							
                							try{
                								let json=JSON.parse(e.responseText)
                								
                								errorMessage = json.message || errorMessage	
                							}catch(e){}
                							
                							layer.msg(errorMessage, {
                                                                        										icon: 2,
                                                                        										time: 2000
                                                                        									});
                						}).always(()=>layer.close(loading))
                					});
                				}

				window.refresh = function(param) {
					table.reload('user-table');
				}
			})</script>
</body>
</html>